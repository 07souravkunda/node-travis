{"version":3,"sources":["components/Header/Header.module.css","components/Blog/Blog.module.css","components/Blog/EachBlog/EachBlog.module.css","logo.svg","components/Header/Header.js","components/Blog/EachBlog/EachBlog.js","components/Blog/Blog.js","components/BlogRead/BlogRead.js","components/NewBlog/NewBlog.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","defaults","withCredentials","Header","props","state","user","get","res","console","log","data","this","setState","className","Styles","to","logo","ul","style","fontSize","href","name","Component","eachBlog","EachBlog","title","content","id","color","Blog","blogs","map","el","key","_id","float_btn","IoIosAdd","BlogRead","blog","match","params","width","margin","height","NewBlog","submit","body","placeholder","onClick","a","document","getElementById","value","Axios","post","App","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cbedc8ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1zSRE\",\"logo\":\"Header_logo__1HQCI\",\"ul\":\"Header_ul__2m1Cu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Blog\":\"Blog_Blog__3lNt0\",\"float_btn\":\"Blog_float_btn__2iFv5\",\"IoIosAdd\":\"Blog_IoIosAdd__3EPlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EachBlog\":\"EachBlog_EachBlog__36gnx\",\"title\":\"EachBlog_title__1fNsW\",\"content\":\"EachBlog_content__2OD5T\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport Styles from \"./Header.module.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\naxios.defaults.withCredentials = true;\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { user: null };\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:3000/auth-details\");\r\n      console.log(res);\r\n      const user = res.data.user;\r\n      this.setState({ user });\r\n    } catch (er) {\r\n      console.log(er);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={Styles.Header}>\r\n        <Link to=\"/\" className={Styles.logo}>\r\n          Blogster\r\n        </Link>\r\n        <ul>\r\n          <nav className={Styles.ul}>\r\n            {this.state.user ? (\r\n              <nav>\r\n                <Link to=\"/blogs\">My Blogs</Link>\r\n              </nav>\r\n            ) : null}\r\n            {!this.state.user ? (\r\n              <a href=\"http://localhost:3000/auth/google\">Login With Google</a>\r\n            ) : (\r\n              <a\r\n                style={{ fontSize: \"0.95rem\" }}\r\n                href=\"http://localhost:3000/logout\"\r\n              >\r\n                {this.state.user.name}\r\n              </a>\r\n            )}\r\n          </nav>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Styles from \"./EachBlog.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst eachBlog = props => {\r\n  return (\r\n    <div className={Styles.EachBlog}>\r\n      <div className={Styles.title}>{props.title}</div>\r\n      <div className={Styles.content}>{props.content}</div>\r\n      <Link to={`/blogs/${props.id}`} style={{ color: \"green\" }}>\r\n        Read\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default eachBlog;\r\n","import React, { Component } from \"react\";\r\nimport Styles from \"./Blog.module.css\";\r\nimport EachBlog from \"./EachBlog/EachBlog\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosAdd } from \"react-icons/io\";\r\n\r\nclass Blog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { blogs: [] };\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      let blogs = await axios.get(\"http://localhost:3000/api/blogs\");\r\n      console.log(blogs);\r\n      blogs = blogs.data.data;\r\n      this.setState({ blogs });\r\n    } catch (er) {\r\n      console.log(er);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={Styles.Blog}>\r\n        {this.state.blogs.map(el => {\r\n          return (\r\n            <EachBlog\r\n              key={el._id}\r\n              id={el._id}\r\n              title={el.title}\r\n              content={el.content}\r\n            />\r\n          );\r\n        })}\r\n\r\n        <Link className={Styles.float_btn} to=\"/blogs/new\">\r\n          <IoIosAdd className={Styles.IoIosAdd} />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Blog;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass BlogRead extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { blog: null };\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      let blog = await axios.get(\r\n        `http://localhost:3000/api/blogs/${this.props.match.params.id}`\r\n      );\r\n\r\n      blog = blog.data.data;\r\n      console.log(blog);\r\n      this.setState({ blog });\r\n    } catch (er) {\r\n      console.log(er);\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.props.match.params.id);\r\n    console.log(this.state.blog);\r\n    if (!this.state.blog) return null;\r\n    return (\r\n      <div style={{ width: \"70%\", margin: \"auto\", height: \"100px\" }}>\r\n        <div style={{ width: \"70%\", margin: \"auto\", height: \"100px\" }}>\r\n          {this.state.blog.title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"70%\",\r\n            margin: \"auto\",\r\n            height: \"100px\",\r\n            color: \"black\",\r\n            fontSize: \"large\"\r\n          }}\r\n        >\r\n          {this.state.blog.content}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BlogRead;\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nclass NewBlog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { submit: false, body: null };\r\n  }\r\n  render() {\r\n    if (!this.state.submit)\r\n      return (\r\n        <div>\r\n          <input placeholder=\"title\" id=\"title\"></input>\r\n          <input placeholder=\"content\" id=\"content\"></input>\r\n          <button\r\n            onClick={async () => {\r\n              const title = document.getElementById(\"title\").value;\r\n              const content = document.getElementById(\"content\").value;\r\n              if (title && content) {\r\n                const body = { title, content };\r\n                try {\r\n                  const res = await Axios.post(\r\n                    \"http://localhost:3000/api/blogs\",\r\n                    body\r\n                  );\r\n                  this.setState({ submit: true, body });\r\n                  console.log(res);\r\n                } catch (er) {\r\n                  console.log(er);\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            Create\r\n          </button>\r\n        </div>\r\n      );\r\n    return (\r\n      <div>\r\n        created\r\n        <div>{this.state.body.title}</div>\r\n        <div>{this.state.body.content}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewBlog;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Blog from \"./components/Blog/Blog\";\nimport BlogRead from \"./components/BlogRead/BlogRead\";\nimport NewBlog from \"./components/NewBlog/NewBlog\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path=\"/blogs/new\" component={NewBlog} />\n        <Route path=\"/blogs/:id\" component={BlogRead} />\n        <Route path=\"/blogs\" component={Blog} />\n        <Route\n          path=\"/\"\n          component={() => (\n            <div>\n              <h1>Blogster!</h1>\n              <div>Write Private Blogs</div>\n            </div>\n          )}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}